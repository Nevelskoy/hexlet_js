class HashTable {

  constructor() {
      this.memory = [];
  }

  hashKey(key) {
    var hash = 0;
    for (var index = 0; index < key.length; index++) {
        
        var code = key.charCodeAt(index);
      hash = ((hash << 5) - hash) + code | 0;
    }
  return hash;
  }

  get(key) {
    // Сперва получим адрес по ключу.
    var address = this.hashKey(key);
    // Затем просто вернём значение, находящееся по этому адресу.
    return this.memory[address];
  }

  set(key, value) {
  // И вновь начинаем с превращения ключа в адрес.
    var address = this.hashKey(key);
  // Затем просто записываем значение по этому адресу.
    this.memory[address] = value;
  }

  remove(key) {
    // Как обычно, хешируем ключ, получая адрес.
    var address = this.hashKey(key);
    // Удаляем значение, если оно существует.
    if (this.memory[address]) {
        delete this.memory[address];
    }
  }
}

var hashTable = new HashTable();

hashTable.set('myKey', 'myValue');
console.log(hashTable.get('myKey'))
